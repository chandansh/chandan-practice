/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.library.slayer.service.base;

import com.library.slayer.model.LMSBook;
import com.library.slayer.service.LMSBookJoinLocalService;
import com.library.slayer.service.LMSBookLocalService;
import com.library.slayer.service.LMSBookService;
import com.library.slayer.service.MemberAddressLocalService;
import com.library.slayer.service.persistence.LMSBookJoinPersistence;
import com.library.slayer.service.persistence.LMSBookPersistence;
import com.library.slayer.service.persistence.MemberAddressPersistence;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.search.Indexer;
import com.liferay.portal.kernel.search.IndexerRegistryUtil;
import com.liferay.portal.kernel.search.SearchException;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.WorkflowInstanceLinkLocalService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;
import com.liferay.portal.service.persistence.WorkflowInstanceLinkPersistence;

import com.liferay.portlet.asset.service.AssetEntryLocalService;
import com.liferay.portlet.asset.service.AssetEntryService;
import com.liferay.portlet.asset.service.AssetLinkLocalService;
import com.liferay.portlet.asset.service.AssetTagLocalService;
import com.liferay.portlet.asset.service.AssetTagService;
import com.liferay.portlet.asset.service.persistence.AssetEntryPersistence;
import com.liferay.portlet.asset.service.persistence.AssetLinkPersistence;
import com.liferay.portlet.asset.service.persistence.AssetTagPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * The base implementation of the l m s book local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.library.slayer.service.impl.LMSBookLocalServiceImpl}.
 * </p>
 *
 * @author Ahmed Hasan
 * @see com.library.slayer.service.impl.LMSBookLocalServiceImpl
 * @see com.library.slayer.service.LMSBookLocalServiceUtil
 * @generated
 */
public abstract class LMSBookLocalServiceBaseImpl implements LMSBookLocalService,
	IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.library.slayer.service.LMSBookLocalServiceUtil} to access the l m s book local service.
	 */

	/**
	 * Adds the l m s book to the database. Also notifies the appropriate model listeners.
	 *
	 * @param lmsBook the l m s book
	 * @return the l m s book that was added
	 * @throws SystemException if a system exception occurred
	 */
	public LMSBook addLMSBook(LMSBook lmsBook) throws SystemException {
		lmsBook.setNew(true);

		lmsBook = lmsBookPersistence.update(lmsBook, false);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.reindex(lmsBook);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}

		return lmsBook;
	}

	/**
	 * Creates a new l m s book with the primary key. Does not add the l m s book to the database.
	 *
	 * @param bookId the primary key for the new l m s book
	 * @return the new l m s book
	 */
	public LMSBook createLMSBook(long bookId) {
		return lmsBookPersistence.create(bookId);
	}

	/**
	 * Deletes the l m s book with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param bookId the primary key of the l m s book
	 * @throws PortalException if a l m s book with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteLMSBook(long bookId)
		throws PortalException, SystemException {
		LMSBook lmsBook = lmsBookPersistence.remove(bookId);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.delete(lmsBook);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}
	}

	/**
	 * Deletes the l m s book from the database. Also notifies the appropriate model listeners.
	 *
	 * @param lmsBook the l m s book
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteLMSBook(LMSBook lmsBook) throws SystemException {
		lmsBookPersistence.remove(lmsBook);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.delete(lmsBook);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return lmsBookPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return lmsBookPersistence.findWithDynamicQuery(dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return lmsBookPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return lmsBookPersistence.countWithDynamicQuery(dynamicQuery);
	}

	public LMSBook fetchLMSBook(long bookId) throws SystemException {
		return lmsBookPersistence.fetchByPrimaryKey(bookId);
	}

	/**
	 * Returns the l m s book with the primary key.
	 *
	 * @param bookId the primary key of the l m s book
	 * @return the l m s book
	 * @throws PortalException if a l m s book with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public LMSBook getLMSBook(long bookId)
		throws PortalException, SystemException {
		return lmsBookPersistence.findByPrimaryKey(bookId);
	}

	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return lmsBookPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns the l m s book with the UUID in the group.
	 *
	 * @param uuid the UUID of l m s book
	 * @param groupId the group id of the l m s book
	 * @return the l m s book
	 * @throws PortalException if a l m s book with the UUID in the group could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public LMSBook getLMSBookByUuidAndGroupId(String uuid, long groupId)
		throws PortalException, SystemException {
		return lmsBookPersistence.findByUUID_G(uuid, groupId);
	}

	/**
	 * Returns a range of all the l m s books.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param start the lower bound of the range of l m s books
	 * @param end the upper bound of the range of l m s books (not inclusive)
	 * @return the range of l m s books
	 * @throws SystemException if a system exception occurred
	 */
	public List<LMSBook> getLMSBooks(int start, int end)
		throws SystemException {
		return lmsBookPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of l m s books.
	 *
	 * @return the number of l m s books
	 * @throws SystemException if a system exception occurred
	 */
	public int getLMSBooksCount() throws SystemException {
		return lmsBookPersistence.countAll();
	}

	/**
	 * Updates the l m s book in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param lmsBook the l m s book
	 * @return the l m s book that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public LMSBook updateLMSBook(LMSBook lmsBook) throws SystemException {
		return updateLMSBook(lmsBook, true);
	}

	/**
	 * Updates the l m s book in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param lmsBook the l m s book
	 * @param merge whether to merge the l m s book with the current session. See {@link com.liferay.portal.service.persistence.BatchSession#update(com.liferay.portal.kernel.dao.orm.Session, com.liferay.portal.model.BaseModel, boolean)} for an explanation.
	 * @return the l m s book that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public LMSBook updateLMSBook(LMSBook lmsBook, boolean merge)
		throws SystemException {
		lmsBook.setNew(false);

		lmsBook = lmsBookPersistence.update(lmsBook, merge);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.reindex(lmsBook);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}

		return lmsBook;
	}

	/**
	 * Returns the l m s book local service.
	 *
	 * @return the l m s book local service
	 */
	public LMSBookLocalService getLMSBookLocalService() {
		return lmsBookLocalService;
	}

	/**
	 * Sets the l m s book local service.
	 *
	 * @param lmsBookLocalService the l m s book local service
	 */
	public void setLMSBookLocalService(LMSBookLocalService lmsBookLocalService) {
		this.lmsBookLocalService = lmsBookLocalService;
	}

	/**
	 * Returns the l m s book remote service.
	 *
	 * @return the l m s book remote service
	 */
	public LMSBookService getLMSBookService() {
		return lmsBookService;
	}

	/**
	 * Sets the l m s book remote service.
	 *
	 * @param lmsBookService the l m s book remote service
	 */
	public void setLMSBookService(LMSBookService lmsBookService) {
		this.lmsBookService = lmsBookService;
	}

	/**
	 * Returns the l m s book persistence.
	 *
	 * @return the l m s book persistence
	 */
	public LMSBookPersistence getLMSBookPersistence() {
		return lmsBookPersistence;
	}

	/**
	 * Sets the l m s book persistence.
	 *
	 * @param lmsBookPersistence the l m s book persistence
	 */
	public void setLMSBookPersistence(LMSBookPersistence lmsBookPersistence) {
		this.lmsBookPersistence = lmsBookPersistence;
	}

	/**
	 * Returns the l m s book join local service.
	 *
	 * @return the l m s book join local service
	 */
	public LMSBookJoinLocalService getLMSBookJoinLocalService() {
		return lmsBookJoinLocalService;
	}

	/**
	 * Sets the l m s book join local service.
	 *
	 * @param lmsBookJoinLocalService the l m s book join local service
	 */
	public void setLMSBookJoinLocalService(
		LMSBookJoinLocalService lmsBookJoinLocalService) {
		this.lmsBookJoinLocalService = lmsBookJoinLocalService;
	}

	/**
	 * Returns the l m s book join persistence.
	 *
	 * @return the l m s book join persistence
	 */
	public LMSBookJoinPersistence getLMSBookJoinPersistence() {
		return lmsBookJoinPersistence;
	}

	/**
	 * Sets the l m s book join persistence.
	 *
	 * @param lmsBookJoinPersistence the l m s book join persistence
	 */
	public void setLMSBookJoinPersistence(
		LMSBookJoinPersistence lmsBookJoinPersistence) {
		this.lmsBookJoinPersistence = lmsBookJoinPersistence;
	}

	/**
	 * Returns the member address local service.
	 *
	 * @return the member address local service
	 */
	public MemberAddressLocalService getMemberAddressLocalService() {
		return memberAddressLocalService;
	}

	/**
	 * Sets the member address local service.
	 *
	 * @param memberAddressLocalService the member address local service
	 */
	public void setMemberAddressLocalService(
		MemberAddressLocalService memberAddressLocalService) {
		this.memberAddressLocalService = memberAddressLocalService;
	}

	/**
	 * Returns the member address persistence.
	 *
	 * @return the member address persistence
	 */
	public MemberAddressPersistence getMemberAddressPersistence() {
		return memberAddressPersistence;
	}

	/**
	 * Sets the member address persistence.
	 *
	 * @param memberAddressPersistence the member address persistence
	 */
	public void setMemberAddressPersistence(
		MemberAddressPersistence memberAddressPersistence) {
		this.memberAddressPersistence = memberAddressPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the workflow instance link local service.
	 *
	 * @return the workflow instance link local service
	 */
	public WorkflowInstanceLinkLocalService getWorkflowInstanceLinkLocalService() {
		return workflowInstanceLinkLocalService;
	}

	/**
	 * Sets the workflow instance link local service.
	 *
	 * @param workflowInstanceLinkLocalService the workflow instance link local service
	 */
	public void setWorkflowInstanceLinkLocalService(
		WorkflowInstanceLinkLocalService workflowInstanceLinkLocalService) {
		this.workflowInstanceLinkLocalService = workflowInstanceLinkLocalService;
	}

	/**
	 * Returns the workflow instance link persistence.
	 *
	 * @return the workflow instance link persistence
	 */
	public WorkflowInstanceLinkPersistence getWorkflowInstanceLinkPersistence() {
		return workflowInstanceLinkPersistence;
	}

	/**
	 * Sets the workflow instance link persistence.
	 *
	 * @param workflowInstanceLinkPersistence the workflow instance link persistence
	 */
	public void setWorkflowInstanceLinkPersistence(
		WorkflowInstanceLinkPersistence workflowInstanceLinkPersistence) {
		this.workflowInstanceLinkPersistence = workflowInstanceLinkPersistence;
	}

	/**
	 * Returns the asset entry local service.
	 *
	 * @return the asset entry local service
	 */
	public AssetEntryLocalService getAssetEntryLocalService() {
		return assetEntryLocalService;
	}

	/**
	 * Sets the asset entry local service.
	 *
	 * @param assetEntryLocalService the asset entry local service
	 */
	public void setAssetEntryLocalService(
		AssetEntryLocalService assetEntryLocalService) {
		this.assetEntryLocalService = assetEntryLocalService;
	}

	/**
	 * Returns the asset entry remote service.
	 *
	 * @return the asset entry remote service
	 */
	public AssetEntryService getAssetEntryService() {
		return assetEntryService;
	}

	/**
	 * Sets the asset entry remote service.
	 *
	 * @param assetEntryService the asset entry remote service
	 */
	public void setAssetEntryService(AssetEntryService assetEntryService) {
		this.assetEntryService = assetEntryService;
	}

	/**
	 * Returns the asset entry persistence.
	 *
	 * @return the asset entry persistence
	 */
	public AssetEntryPersistence getAssetEntryPersistence() {
		return assetEntryPersistence;
	}

	/**
	 * Sets the asset entry persistence.
	 *
	 * @param assetEntryPersistence the asset entry persistence
	 */
	public void setAssetEntryPersistence(
		AssetEntryPersistence assetEntryPersistence) {
		this.assetEntryPersistence = assetEntryPersistence;
	}

	/**
	 * Returns the asset link local service.
	 *
	 * @return the asset link local service
	 */
	public AssetLinkLocalService getAssetLinkLocalService() {
		return assetLinkLocalService;
	}

	/**
	 * Sets the asset link local service.
	 *
	 * @param assetLinkLocalService the asset link local service
	 */
	public void setAssetLinkLocalService(
		AssetLinkLocalService assetLinkLocalService) {
		this.assetLinkLocalService = assetLinkLocalService;
	}

	/**
	 * Returns the asset link persistence.
	 *
	 * @return the asset link persistence
	 */
	public AssetLinkPersistence getAssetLinkPersistence() {
		return assetLinkPersistence;
	}

	/**
	 * Sets the asset link persistence.
	 *
	 * @param assetLinkPersistence the asset link persistence
	 */
	public void setAssetLinkPersistence(
		AssetLinkPersistence assetLinkPersistence) {
		this.assetLinkPersistence = assetLinkPersistence;
	}

	/**
	 * Returns the asset tag local service.
	 *
	 * @return the asset tag local service
	 */
	public AssetTagLocalService getAssetTagLocalService() {
		return assetTagLocalService;
	}

	/**
	 * Sets the asset tag local service.
	 *
	 * @param assetTagLocalService the asset tag local service
	 */
	public void setAssetTagLocalService(
		AssetTagLocalService assetTagLocalService) {
		this.assetTagLocalService = assetTagLocalService;
	}

	/**
	 * Returns the asset tag remote service.
	 *
	 * @return the asset tag remote service
	 */
	public AssetTagService getAssetTagService() {
		return assetTagService;
	}

	/**
	 * Sets the asset tag remote service.
	 *
	 * @param assetTagService the asset tag remote service
	 */
	public void setAssetTagService(AssetTagService assetTagService) {
		this.assetTagService = assetTagService;
	}

	/**
	 * Returns the asset tag persistence.
	 *
	 * @return the asset tag persistence
	 */
	public AssetTagPersistence getAssetTagPersistence() {
		return assetTagPersistence;
	}

	/**
	 * Sets the asset tag persistence.
	 *
	 * @param assetTagPersistence the asset tag persistence
	 */
	public void setAssetTagPersistence(AssetTagPersistence assetTagPersistence) {
		this.assetTagPersistence = assetTagPersistence;
	}

	public void afterPropertiesSet() {
		PersistedModelLocalServiceRegistryUtil.register("com.library.slayer.model.LMSBook",
			lmsBookLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.library.slayer.model.LMSBook");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return LMSBook.class;
	}

	protected String getModelClassName() {
		return LMSBook.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = lmsBookPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = LMSBookLocalService.class)
	protected LMSBookLocalService lmsBookLocalService;
	@BeanReference(type = LMSBookService.class)
	protected LMSBookService lmsBookService;
	@BeanReference(type = LMSBookPersistence.class)
	protected LMSBookPersistence lmsBookPersistence;
	@BeanReference(type = LMSBookJoinLocalService.class)
	protected LMSBookJoinLocalService lmsBookJoinLocalService;
	@BeanReference(type = LMSBookJoinPersistence.class)
	protected LMSBookJoinPersistence lmsBookJoinPersistence;
	@BeanReference(type = MemberAddressLocalService.class)
	protected MemberAddressLocalService memberAddressLocalService;
	@BeanReference(type = MemberAddressPersistence.class)
	protected MemberAddressPersistence memberAddressPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = WorkflowInstanceLinkLocalService.class)
	protected WorkflowInstanceLinkLocalService workflowInstanceLinkLocalService;
	@BeanReference(type = WorkflowInstanceLinkPersistence.class)
	protected WorkflowInstanceLinkPersistence workflowInstanceLinkPersistence;
	@BeanReference(type = AssetEntryLocalService.class)
	protected AssetEntryLocalService assetEntryLocalService;
	@BeanReference(type = AssetEntryService.class)
	protected AssetEntryService assetEntryService;
	@BeanReference(type = AssetEntryPersistence.class)
	protected AssetEntryPersistence assetEntryPersistence;
	@BeanReference(type = AssetLinkLocalService.class)
	protected AssetLinkLocalService assetLinkLocalService;
	@BeanReference(type = AssetLinkPersistence.class)
	protected AssetLinkPersistence assetLinkPersistence;
	@BeanReference(type = AssetTagLocalService.class)
	protected AssetTagLocalService assetTagLocalService;
	@BeanReference(type = AssetTagService.class)
	protected AssetTagService assetTagService;
	@BeanReference(type = AssetTagPersistence.class)
	protected AssetTagPersistence assetTagPersistence;
	private static Log _log = LogFactoryUtil.getLog(LMSBookLocalServiceBaseImpl.class);
	private String _beanIdentifier;
}