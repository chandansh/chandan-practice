/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.library.slayer.model.impl;

import com.library.slayer.model.LMSBookJoin;
import com.library.slayer.model.LMSBookJoinModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the LMSBookJoin service. Represents a row in the &quot;LMS_LMSBookJoin&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.library.slayer.model.LMSBookJoinModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LMSBookJoinImpl}.
 * </p>
 *
 * @author Ahmed Hasan
 * @see LMSBookJoinImpl
 * @see com.library.slayer.model.LMSBookJoin
 * @see com.library.slayer.model.LMSBookJoinModel
 * @generated
 */
public class LMSBookJoinModelImpl extends BaseModelImpl<LMSBookJoin>
	implements LMSBookJoinModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l m s book join model instance should use the {@link com.library.slayer.model.LMSBookJoin} interface instead.
	 */
	public static final String TABLE_NAME = "LMS_LMSBookJoin";
	public static final Object[][] TABLE_COLUMNS = {
			{ "joinId", Types.BIGINT },
			{ "bookId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "bookTitle", Types.VARCHAR },
			{ "author", Types.VARCHAR },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "zip", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table LMS_LMSBookJoin (joinId LONG not null primary key,bookId LONG,userId LONG,bookTitle VARCHAR(75) null,author VARCHAR(75) null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,city VARCHAR(75) null,zip VARCHAR(75) null,emailAddress VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LMS_LMSBookJoin";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.library.slayer.model.LMSBookJoin"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.library.slayer.model.LMSBookJoin"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.library.slayer.model.LMSBookJoin"));

	public LMSBookJoinModelImpl() {
	}

	public long getPrimaryKey() {
		return _joinId;
	}

	public void setPrimaryKey(long primaryKey) {
		setJoinId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_joinId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return LMSBookJoin.class;
	}

	public String getModelClassName() {
		return LMSBookJoin.class.getName();
	}

	public long getJoinId() {
		return _joinId;
	}

	public void setJoinId(long joinId) {
		_joinId = joinId;
	}

	public long getBookId() {
		return _bookId;
	}

	public void setBookId(long bookId) {
		_bookId = bookId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getBookTitle() {
		if (_bookTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _bookTitle;
		}
	}

	public void setBookTitle(String bookTitle) {
		_bookTitle = bookTitle;
	}

	public String getAuthor() {
		if (_author == null) {
			return StringPool.BLANK;
		}
		else {
			return _author;
		}
	}

	public void setAuthor(String author) {
		_author = author;
	}

	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	public void setCity(String city) {
		_city = city;
	}

	public String getZip() {
		if (_zip == null) {
			return StringPool.BLANK;
		}
		else {
			return _zip;
		}
	}

	public void setZip(String zip) {
		_zip = zip;
	}

	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public LMSBookJoin toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (LMSBookJoin)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					LMSBookJoin.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		LMSBookJoinImpl lmsBookJoinImpl = new LMSBookJoinImpl();

		lmsBookJoinImpl.setJoinId(getJoinId());
		lmsBookJoinImpl.setBookId(getBookId());
		lmsBookJoinImpl.setUserId(getUserId());
		lmsBookJoinImpl.setBookTitle(getBookTitle());
		lmsBookJoinImpl.setAuthor(getAuthor());
		lmsBookJoinImpl.setFirstName(getFirstName());
		lmsBookJoinImpl.setLastName(getLastName());
		lmsBookJoinImpl.setCity(getCity());
		lmsBookJoinImpl.setZip(getZip());
		lmsBookJoinImpl.setEmailAddress(getEmailAddress());

		lmsBookJoinImpl.resetOriginalValues();

		return lmsBookJoinImpl;
	}

	public int compareTo(LMSBookJoin lmsBookJoin) {
		long primaryKey = lmsBookJoin.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		LMSBookJoin lmsBookJoin = null;

		try {
			lmsBookJoin = (LMSBookJoin)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = lmsBookJoin.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LMSBookJoin> toCacheModel() {
		LMSBookJoinCacheModel lmsBookJoinCacheModel = new LMSBookJoinCacheModel();

		lmsBookJoinCacheModel.joinId = getJoinId();

		lmsBookJoinCacheModel.bookId = getBookId();

		lmsBookJoinCacheModel.userId = getUserId();

		lmsBookJoinCacheModel.bookTitle = getBookTitle();

		String bookTitle = lmsBookJoinCacheModel.bookTitle;

		if ((bookTitle != null) && (bookTitle.length() == 0)) {
			lmsBookJoinCacheModel.bookTitle = null;
		}

		lmsBookJoinCacheModel.author = getAuthor();

		String author = lmsBookJoinCacheModel.author;

		if ((author != null) && (author.length() == 0)) {
			lmsBookJoinCacheModel.author = null;
		}

		lmsBookJoinCacheModel.firstName = getFirstName();

		String firstName = lmsBookJoinCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			lmsBookJoinCacheModel.firstName = null;
		}

		lmsBookJoinCacheModel.lastName = getLastName();

		String lastName = lmsBookJoinCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			lmsBookJoinCacheModel.lastName = null;
		}

		lmsBookJoinCacheModel.city = getCity();

		String city = lmsBookJoinCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			lmsBookJoinCacheModel.city = null;
		}

		lmsBookJoinCacheModel.zip = getZip();

		String zip = lmsBookJoinCacheModel.zip;

		if ((zip != null) && (zip.length() == 0)) {
			lmsBookJoinCacheModel.zip = null;
		}

		lmsBookJoinCacheModel.emailAddress = getEmailAddress();

		String emailAddress = lmsBookJoinCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			lmsBookJoinCacheModel.emailAddress = null;
		}

		return lmsBookJoinCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{joinId=");
		sb.append(getJoinId());
		sb.append(", bookId=");
		sb.append(getBookId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", bookTitle=");
		sb.append(getBookTitle());
		sb.append(", author=");
		sb.append(getAuthor());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", zip=");
		sb.append(getZip());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.library.slayer.model.LMSBookJoin");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>joinId</column-name><column-value><![CDATA[");
		sb.append(getJoinId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookId</column-name><column-value><![CDATA[");
		sb.append(getBookId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookTitle</column-name><column-value><![CDATA[");
		sb.append(getBookTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>author</column-name><column-value><![CDATA[");
		sb.append(getAuthor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>zip</column-name><column-value><![CDATA[");
		sb.append(getZip());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LMSBookJoin.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			LMSBookJoin.class
		};
	private long _joinId;
	private long _bookId;
	private long _userId;
	private String _userUuid;
	private String _bookTitle;
	private String _author;
	private String _firstName;
	private String _lastName;
	private String _city;
	private String _zip;
	private String _emailAddress;
	private transient ExpandoBridge _expandoBridge;
	private LMSBookJoin _escapedModelProxy;
}