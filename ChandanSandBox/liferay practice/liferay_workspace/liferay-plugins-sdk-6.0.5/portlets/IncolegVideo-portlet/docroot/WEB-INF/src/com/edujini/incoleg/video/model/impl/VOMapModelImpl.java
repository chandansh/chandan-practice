/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.edujini.incoleg.video.model.impl;

import com.edujini.incoleg.video.model.VOMap;
import com.edujini.incoleg.video.model.VOMapModel;
import com.edujini.incoleg.video.model.VOMapSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.List;

/**
 * The base model implementation for the VOMap service. Represents a row in the &quot;video_VOMap&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.edujini.incoleg.video.model.VOMapModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VOMapImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a v o map model instance should use the {@link com.edujini.incoleg.video.model.VOMap} interface instead.
 * </p>
 *
 * @author Edujini
 * @see VOMapImpl
 * @see com.edujini.incoleg.video.model.VOMap
 * @see com.edujini.incoleg.video.model.VOMapModel
 * @generated
 */
public class VOMapModelImpl extends BaseModelImpl<VOMap> implements VOMapModel {
	public static final String TABLE_NAME = "video_VOMap";
	public static final Object[][] TABLE_COLUMNS = {
			{ "videoId", new Integer(Types.VARCHAR) },
			{ "orgId", new Integer(Types.VARCHAR) },
			{ "StoreType", new Integer(Types.VARCHAR) }
		};
	public static final String TABLE_SQL_CREATE = "create table video_VOMap (videoId VARCHAR(75) not null primary key,orgId VARCHAR(75) null,StoreType VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table video_VOMap";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.edujini.incoleg.video.model.VOMap"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.edujini.incoleg.video.model.VOMap"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VOMap toModel(VOMapSoap soapModel) {
		VOMap model = new VOMapImpl();

		model.setVideoId(soapModel.getVideoId());
		model.setOrgId(soapModel.getOrgId());
		model.setStoreType(soapModel.getStoreType());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VOMap> toModels(VOMapSoap[] soapModels) {
		List<VOMap> models = new ArrayList<VOMap>(soapModels.length);

		for (VOMapSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.edujini.incoleg.video.model.VOMap"));

	public VOMapModelImpl() {
	}

	public String getPrimaryKey() {
		return _videoId;
	}

	public void setPrimaryKey(String pk) {
		setVideoId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return _videoId;
	}

	public String getVideoId() {
		if (_videoId == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoId;
		}
	}

	public void setVideoId(String videoId) {
		_videoId = videoId;
	}

	public String getOrgId() {
		if (_orgId == null) {
			return StringPool.BLANK;
		}
		else {
			return _orgId;
		}
	}

	public void setOrgId(String orgId) {
		_orgId = orgId;
	}

	public String getStoreType() {
		if (_StoreType == null) {
			return StringPool.BLANK;
		}
		else {
			return _StoreType;
		}
	}

	public void setStoreType(String StoreType) {
		_StoreType = StoreType;
	}

	public VOMap toEscapedModel() {
		if (isEscapedModel()) {
			return (VOMap)this;
		}
		else {
			return (VOMap)Proxy.newProxyInstance(VOMap.class.getClassLoader(),
				new Class[] { VOMap.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public Object clone() {
		VOMapImpl clone = new VOMapImpl();

		clone.setVideoId(getVideoId());
		clone.setOrgId(getOrgId());
		clone.setStoreType(getStoreType());

		return clone;
	}

	public int compareTo(VOMap voMap) {
		String pk = voMap.getPrimaryKey();

		return getPrimaryKey().compareTo(pk);
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		VOMap voMap = null;

		try {
			voMap = (VOMap)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String pk = voMap.getPrimaryKey();

		if (getPrimaryKey().equals(pk)) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{videoId=");
		sb.append(getVideoId());
		sb.append(", orgId=");
		sb.append(getOrgId());
		sb.append(", StoreType=");
		sb.append(getStoreType());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.edujini.incoleg.video.model.VOMap");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>videoId</column-name><column-value><![CDATA[");
		sb.append(getVideoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orgId</column-name><column-value><![CDATA[");
		sb.append(getOrgId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>StoreType</column-name><column-value><![CDATA[");
		sb.append(getStoreType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private String _videoId;
	private String _orgId;
	private String _StoreType;
}