/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.edujini.incoleg.video.model.impl;

import com.edujini.incoleg.video.model.StoreSettings;
import com.edujini.incoleg.video.model.StoreSettingsModel;
import com.edujini.incoleg.video.model.StoreSettingsSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.List;

/**
 * The base model implementation for the StoreSettings service. Represents a row in the &quot;video_StoreSettings&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.edujini.incoleg.video.model.StoreSettingsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StoreSettingsImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a store settings model instance should use the {@link com.edujini.incoleg.video.model.StoreSettings} interface instead.
 * </p>
 *
 * @author Edujini
 * @see StoreSettingsImpl
 * @see com.edujini.incoleg.video.model.StoreSettings
 * @see com.edujini.incoleg.video.model.StoreSettingsModel
 * @generated
 */
public class StoreSettingsModelImpl extends BaseModelImpl<StoreSettings>
	implements StoreSettingsModel {
	public static final String TABLE_NAME = "video_StoreSettings";
	public static final Object[][] TABLE_COLUMNS = {
			{ "storeId", new Integer(Types.BIGINT) },
			{ "inBId", new Integer(Types.VARCHAR) },
			{ "prBId", new Integer(Types.VARCHAR) },
			{ "outBId", new Integer(Types.VARCHAR) },
			{ "accessKId", new Integer(Types.VARCHAR) },
			{ "secretAKey", new Integer(Types.VARCHAR) }
		};
	public static final String TABLE_SQL_CREATE = "create table video_StoreSettings (storeId LONG not null primary key,inBId VARCHAR(75) null,prBId VARCHAR(75) null,outBId VARCHAR(75) null,accessKId VARCHAR(75) null,secretAKey VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table video_StoreSettings";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.edujini.incoleg.video.model.StoreSettings"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.edujini.incoleg.video.model.StoreSettings"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static StoreSettings toModel(StoreSettingsSoap soapModel) {
		StoreSettings model = new StoreSettingsImpl();

		model.setStoreId(soapModel.getStoreId());
		model.setInBId(soapModel.getInBId());
		model.setPrBId(soapModel.getPrBId());
		model.setOutBId(soapModel.getOutBId());
		model.setAccessKId(soapModel.getAccessKId());
		model.setSecretAKey(soapModel.getSecretAKey());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<StoreSettings> toModels(StoreSettingsSoap[] soapModels) {
		List<StoreSettings> models = new ArrayList<StoreSettings>(soapModels.length);

		for (StoreSettingsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.edujini.incoleg.video.model.StoreSettings"));

	public StoreSettingsModelImpl() {
	}

	public long getPrimaryKey() {
		return _storeId;
	}

	public void setPrimaryKey(long pk) {
		setStoreId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_storeId);
	}

	public long getStoreId() {
		return _storeId;
	}

	public void setStoreId(long storeId) {
		_storeId = storeId;
	}

	public String getInBId() {
		if (_inBId == null) {
			return StringPool.BLANK;
		}
		else {
			return _inBId;
		}
	}

	public void setInBId(String inBId) {
		_inBId = inBId;
	}

	public String getPrBId() {
		if (_prBId == null) {
			return StringPool.BLANK;
		}
		else {
			return _prBId;
		}
	}

	public void setPrBId(String prBId) {
		_prBId = prBId;
	}

	public String getOutBId() {
		if (_outBId == null) {
			return StringPool.BLANK;
		}
		else {
			return _outBId;
		}
	}

	public void setOutBId(String outBId) {
		_outBId = outBId;
	}

	public String getAccessKId() {
		if (_accessKId == null) {
			return StringPool.BLANK;
		}
		else {
			return _accessKId;
		}
	}

	public void setAccessKId(String accessKId) {
		_accessKId = accessKId;
	}

	public String getSecretAKey() {
		if (_secretAKey == null) {
			return StringPool.BLANK;
		}
		else {
			return _secretAKey;
		}
	}

	public void setSecretAKey(String secretAKey) {
		_secretAKey = secretAKey;
	}

	public StoreSettings toEscapedModel() {
		if (isEscapedModel()) {
			return (StoreSettings)this;
		}
		else {
			return (StoreSettings)Proxy.newProxyInstance(StoreSettings.class.getClassLoader(),
				new Class[] { StoreSettings.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					StoreSettings.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		StoreSettingsImpl clone = new StoreSettingsImpl();

		clone.setStoreId(getStoreId());
		clone.setInBId(getInBId());
		clone.setPrBId(getPrBId());
		clone.setOutBId(getOutBId());
		clone.setAccessKId(getAccessKId());
		clone.setSecretAKey(getSecretAKey());

		return clone;
	}

	public int compareTo(StoreSettings storeSettings) {
		long pk = storeSettings.getPrimaryKey();

		if (getPrimaryKey() < pk) {
			return -1;
		}
		else if (getPrimaryKey() > pk) {
			return 1;
		}
		else {
			return 0;
		}
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		StoreSettings storeSettings = null;

		try {
			storeSettings = (StoreSettings)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = storeSettings.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{storeId=");
		sb.append(getStoreId());
		sb.append(", inBId=");
		sb.append(getInBId());
		sb.append(", prBId=");
		sb.append(getPrBId());
		sb.append(", outBId=");
		sb.append(getOutBId());
		sb.append(", accessKId=");
		sb.append(getAccessKId());
		sb.append(", secretAKey=");
		sb.append(getSecretAKey());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.edujini.incoleg.video.model.StoreSettings");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>storeId</column-name><column-value><![CDATA[");
		sb.append(getStoreId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inBId</column-name><column-value><![CDATA[");
		sb.append(getInBId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prBId</column-name><column-value><![CDATA[");
		sb.append(getPrBId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outBId</column-name><column-value><![CDATA[");
		sb.append(getOutBId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessKId</column-name><column-value><![CDATA[");
		sb.append(getAccessKId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secretAKey</column-name><column-value><![CDATA[");
		sb.append(getSecretAKey());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _storeId;
	private String _inBId;
	private String _prBId;
	private String _outBId;
	private String _accessKId;
	private String _secretAKey;
	private transient ExpandoBridge _expandoBridge;
}